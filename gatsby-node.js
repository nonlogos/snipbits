// Use mdx frontmatter path if available for mdx file path
// exports.onCreateNode = ({ node, getNode, actions }) => {
// 	const { createNodeField, createFilePath } = actions;

// 	if (node.internal.type === 'mdx') {
// 		let slug = node.frontmatter.path || createFilePath(node, getNode);
// 		createNodeField({
// 			node,
// 			name: 'slug',
// 			value: slug,
// 		});
// 	}
// };

const path = require('path');

exports.createPages = async ({ graphql, actions, reporter }) => {
	const { createPage } = actions;

	const result = await graphql(`
		query {
			allMdx {
				edges {
					node {
						id
						# Slug field added by gatsby-plugin-mdx
						slug
					}
				}
			}
		}
	`);

	if (result.errors) {
		reporter.panicOnBuild('ERROR: loading createPages query');
	}

	const posts = result.data.allMdx.edges;

	posts.forEach(({ node }, index) => {
		createPage({
			// The slug generated by gatsby-plugin-mdx doesn't contain a slash at the beginning
			// You can prepend it with any prefix you want
			path: `/${node.slug}`,
			// This component will wrap our MDX content
			component: path.resolve(`./src/templates/post-template.tsx`),
			// You can use the values in this context in
			// our page layout component
			context: {
				id: node.id,
			},
		});
	});
};
